{"version":3,"sources":["images/logo.png","components/Header/Header.js","data/data.js","components/Form/Form.js","components/Modal/Modal.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Header","calculateTimeLeft","year","Date","getFullYear","difference","timeLeft","days","Math","floor","hours","minutes","seconds","useState","setTimeLeft","useEffect","timer","setTimeout","clearTimeout","className","src","logo","alt","company","lectures","Form","props","listener","setListener","personaldata","setPersonalData","useForm","register","handleSubmit","reset","onSubmit","data","console","log","type","placeholder","required","name","list","id","map","index","value","onClick","alert","htmlFor","defaultChecked","lecture","href","openModal","disabled","Modal","onOverlayAndEscClick","closeModal","target","App","modalActive","setModalActive","window","addEventListener","e","key","handleOverlayClose","useCallback","classList","contains","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QAAe,G,YAAA,IAA0B,kC,OCiD1BA,MA7Cf,WAEI,IAAMC,EAAoB,WACtB,IAAIC,GAAO,IAAIC,MAAOC,cAClBC,GAAc,IAAIF,KAAJ,gBAAkBD,KAAW,IAAIC,KAC/CG,EAAW,GAWf,OATID,EAAa,IACbC,EAAW,CACPC,KAAMC,KAAKC,MAAMJ,EAAU,OAC3BK,MAAOF,KAAKC,MAAOJ,EAAU,KAAuB,IACpDM,QAASH,KAAKC,MAAOJ,EAAa,IAAO,GAAM,IAC/CO,QAASJ,KAAKC,MAAOJ,EAAa,IAAQ,MAI3CC,GAGX,EAAgCO,mBAASZ,KAAzC,mBAAOK,EAAP,KAAiBQ,EAAjB,KASA,OAPAC,qBAAU,WACN,IAAMC,EAAQC,YAAW,WACrBH,EAAYb,OACb,KACH,OAAO,kBAAMiB,aAAaF,OAI1B,yBAAQG,UAAU,SAAlB,UACI,qBAAKA,UAAU,eAAeC,IAAKC,EAAMC,IAAI,gGAC7C,sBAAKH,UAAU,QAAf,UACI,oBAAIA,UAAU,eAAd,kKACA,sBAAKA,UAAU,cAAf,UACI,sBAAKA,UAAU,cAAf,UAA8Bb,EAASC,KAAvC,IAA6C,+DAC7C,sBAAKY,UAAU,cAAf,UAA8Bb,EAASI,MAAvC,IAA8C,qEAC9C,sBAAKS,UAAU,cAAf,UAA8Bb,EAASK,QAAvC,IAAgD,qEAChD,sBAAKQ,UAAU,cAAf,UAA8Bb,EAASM,QAAvC,IAAgD,8EAEpD,mBAAGO,UAAU,cAAb,iR,eC3CHI,G,MAAU,CACnB,sDACA,+FACA,kHACA,2HAGSC,EAAW,CACpB,uMACA,iNACA,wCCLW,SAASC,EAAKC,GACzB,MAAgCb,oBAAS,GAAzC,mBAAOc,EAAP,KAAiBC,EAAjB,KACA,EAAwCf,oBAAS,GAAjD,mBAAOgB,EAAP,KAAqBC,EAArB,KACA,EAAwCC,cAAjCC,EAAP,EAAOA,SAAUC,EAAjB,EAAiBA,aAAjB,EAA+BC,MAG/B,OACI,uBAAMf,UAAU,OAAOgB,SAAUF,GAHpB,SAAAG,GAAI,OAAIC,QAAQC,IAAIF,MAGjC,UAGI,uBAAOjB,UAAU,uBAAjB,SACI,mCACIA,UAAU,cACVoB,KAAK,OACLC,YAAY,6CACZC,UAAQ,GAAKT,EAAS,kDAG9B,uBAAOb,UAAU,uBAAjB,SACI,mCACIA,UAAU,cACVoB,KAAK,OACLC,YAAY,qBACZC,UAAQ,GAAKT,EAAS,0BAG9B,uBAAOb,UAAU,uBAAjB,SACI,mCACIA,UAAU,cACVoB,KAAK,OACLC,YAAY,mDACZE,KAAK,aACLD,UAAQ,GAAKT,EAAS,wDAK9B,wBAAOb,UAAU,wCAAjB,UACI,mCACIA,UAAU,6BACVwB,KAAK,UACLH,YAAY,mDACZC,UAAQ,GAAKT,EAAS,sDAE1B,0BAAUY,GAAG,UAAb,SACKrB,EAAQsB,KAAI,SAACH,EAAMI,GAAP,OAAkB,wBAAQC,MAAOL,GAAWI,QAE7D,wBAAQ3B,UAAU,wBAAwBoB,KAAK,SAASS,QAAS,kBAAMC,MAAM,+MAA7E,oHAEJ,uBAAO9B,UAAU,wCAAjB,SACI,mCACIA,UAAU,cACVoB,KAAK,OACLC,YAAY,yDACZC,UAAQ,GAAKT,EAAS,8DAK9B,sBAAKb,UAAU,OAAf,UACI,mBAAGA,UAAU,aAAb,oIACA,sBAAKA,UAAU,sBAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,mCACIA,UAAU,iBACVyB,GAAG,UACHL,KAAK,QACLG,KAAK,eACLK,MAAM,qGACFf,EAAS,8BAEjB,uBAAOkB,QAAQ,UAAUF,QAAS,kBAAMpB,GAAY,IAApD,kHAEJ,sBAAKT,UAAU,iBAAf,UACI,mCACIA,UAAU,iBACVyB,GAAG,WACHL,KAAK,QACLG,KAAK,eACLK,MAAM,yDACNI,gBAAc,GACVnB,EAAS,8BAEjB,uBAAOkB,QAAQ,WAAWF,QAAS,kBAAMpB,GAAY,IAArD,6EAMXD,EACG,qCACI,wBAAOR,UAAU,wCAAjB,UACI,mCACIA,UAAU,6BACVwB,KAAK,UACLH,YAAY,gHACZC,UAAQ,GAAKT,EAAS,mHAE1B,0BAAUY,GAAG,UAAb,SACKpB,EAASqB,KAAI,SAACO,EAASN,GAAV,OAAqB,wBAAQC,MAAOK,GAAcN,WAIxE,sBAAK3B,UAAU,+BAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,mCACIA,UAAU,iBACVyB,GAAG,SACHL,KAAK,QACLG,KAAK,SACLK,MAAM,yDACNI,gBAAc,GACVnB,EAAU,4DAElB,uBAAOkB,QAAQ,SAAf,uEAEJ,sBAAK/B,UAAU,iBAAf,UACI,mCACIA,UAAU,iBACVyB,GAAG,YACHL,KAAK,QACLG,KAAK,SACLK,MAAM,8CACFf,EAAS,4DAEjB,uBAAOkB,QAAQ,YAAf,8DAIR,uBAAO/B,UAAU,wCAAjB,SACI,mCACIA,UAAU,cACVoB,KAAK,OACLC,YAAY,uEACRR,EAAS,2EAIrB,uBAAOb,UAAU,+BAAjB,SACI,sCACIA,UAAU,mCACVqB,YAAY,sJACRR,EAAS,6JAGnB,KAIV,sBAAKb,UAAU,OAAf,UACI,mBAAGA,UAAU,aAAb,wFACA,sBAAKA,UAAU,sBAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,mCACIA,UAAU,iBACVyB,GAAG,aACHL,KAAK,QACLG,KAAK,gBACLS,gBAAc,EACdJ,MAAM,kCACFf,EAAS,+EAGjB,uBAAOkB,QAAQ,aAAf,+CAEJ,sBAAK/B,UAAU,iBAAf,UACI,mCACIA,UAAU,iBACVyB,GAAG,aACHL,KAAK,QACLG,KAAK,gBACLK,MAAM,8CACFf,EAAS,+EAEjB,uBAAOkB,QAAQ,aAAf,sFAMZ,mBAAG/B,UAAU,aAAb,6HACA,uBAAOA,UAAU,uBAAjB,SACI,mCACIA,UAAU,cACVoB,KAAK,QACLC,YAAY,mIACZC,UAAQ,GAAKT,EAAS,aAG9B,uBAAOb,UAAU,uBAAjB,SACI,mCACIA,UAAU,cACVoB,KAAK,MAAMC,YAAY,wFACvBC,UAAQ,GAAKT,EAAS,oBAG9B,uBAAOb,UAAU,uBAAjB,SACI,mCACIA,UAAU,cACVoB,KAAK,MACLC,YAAY,wFACZC,UAAQ,GAAKT,EAAS,oBAI9B,sBAAKb,UAAU,cAAf,UACI,uLAAiC,mBAC7BkC,KAAK,4IADwB,kCAEjC,sBAAKlC,UAAU,WAAf,UACI,uBACIoB,KAAK,WACLG,KAAK,gBACLD,UAAQ,EACRO,QAAS,kBAAKlB,GAAiBD,MALvC,wEAOkB,sBAAMmB,QAAStB,EAAM4B,UAArB,wLAItB,qBAAKnC,UAAU,eAAf,SACI,uBAAOA,UAAU,mBAAmBoB,KAAK,SAASQ,MAAM,8FAAmBQ,UAAW1B,S,MChNvF2B,MAff,SAAe9B,GAEX,OACI,qBAAKP,UAAS,gBAAWO,EAAM4B,UAAY,cAAgB,IAAMN,QAAStB,EAAM+B,qBAAhF,SACI,sBAAKtC,UAAU,iBAAf,UACI,wBAAQA,UAAU,eAAe6B,QAAStB,EAAMgC,aAChD,oBAAGvC,UAAU,cAAb,ykBAC0C,mBAAGA,UAAU,cAAckC,KAAK,wCAAwCM,OAAO,SAA/E,+TAD1C,wbCmCDC,MArCf,WAEI,MAAsC/C,oBAAS,GAA/C,mBAAOgD,EAAP,KAAoBC,EAApB,KAMMJ,EAAa,WACfI,GAAe,IAGnB/C,qBAAU,WACNgD,OAAOC,iBAAiB,SAAS,SAACC,GAChB,WAAVA,EAAEC,KACFR,SAGT,CAACA,IAEJ,IAAMS,EAAqBC,uBAAY,SAACH,GAChCA,EAAEN,OAAOU,UAAUC,SAAS,UAC5BZ,MAEL,CAACA,IAEJ,OACI,sBAAKvC,UAAU,MAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAMmC,UAzBI,WACdQ,GAAe,MAyBX,cAAC,EAAD,CAAOL,qBAAsBU,EACtBT,WAAYA,EACZJ,UAAWO,QC1BfU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f9d0e444.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.725291fa.png\";","import './Header.css';\r\nimport {useState, useEffect} from \"react\";\r\nimport logo from \"./../../images/logo.png\";\r\n\r\nfunction Header() {\r\n\r\n    const calculateTimeLeft = () => {\r\n        let year = new Date().getFullYear();\r\n        let difference = +new Date(`09/29/${year}`) - +new Date();\r\n        let timeLeft = {};\r\n\r\n        if (difference > 0) {\r\n            timeLeft = {\r\n                days: Math.floor(difference / (1000 * 60 * 60 * 24)),\r\n                hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\r\n                minutes: Math.floor((difference / 1000 / 60) % 60),\r\n                seconds: Math.floor((difference / 1000) % 60)\r\n            };\r\n        }\r\n\r\n        return timeLeft;\r\n    }\r\n\r\n    const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            setTimeLeft(calculateTimeLeft());\r\n        }, 1000);\r\n        return () => clearTimeout(timer);\r\n    });\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <img className=\"header__logo\" src={logo} alt=\"логотип Роснефть\"/>\r\n            <div className=\"timer\">\r\n                <h2 className=\"timer__title\">До начала семинара осталось:</h2>\r\n                <div className=\"timer__rest\">\r\n                    <div className=\"timer__item\">{timeLeft.days} <span>дней</span></div>\r\n                    <div className=\"timer__item\">{timeLeft.hours} <span>часов</span></div>\r\n                    <div className=\"timer__item\">{timeLeft.minutes} <span>минут</span></div>\r\n                    <div className=\"timer__item\">{timeLeft.seconds} <span>секунд</span></div>\r\n                </div>\r\n                <p className=\"timer__info\">Ждем вас на семинаре с 29 сентября по 1 октября 2021 года</p>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","export const company = [\r\n    'АО \"ИГиРГИ\"',\r\n    'ПАО «НК «РОСНЕФТЬ»',\r\n    'АО «Востсибнефтегаз»',\r\n    'АО «РОСПАН ИНТЕРНЕШНЛ»'\r\n]\r\n\r\nexport const lectures = [\r\n    'Интерпретации данных ГИС при бурении',\r\n    'Геолого-технологические исследования',\r\n    'Другое'\r\n]","import React, {useState} from \"react\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport './Form.css';\r\nimport {company, lectures} from \"../../data/data\";\r\n\r\nexport default function Form(props) {\r\n    const [listener, setListener] = useState(false)\r\n    const [personaldata, setPersonalData] = useState(false)\r\n    const {register, handleSubmit, reset} = useForm();\r\n    const onSubmit = data => console.log(data);\r\n\r\n    return (\r\n        <form className=\"form\" onSubmit={handleSubmit(onSubmit)}>\r\n\r\n            {/* ФИО */}\r\n            <label className=\"form__label required\">\r\n                <input\r\n                    className=\"form__input\"\r\n                    type=\"text\"\r\n                    placeholder=\"Фамилия\"\r\n                    required {...register(\"Фамилия\")}\r\n                />\r\n            </label>\r\n            <label className=\"form__label required\">\r\n                <input\r\n                    className=\"form__input\"\r\n                    type=\"text\"\r\n                    placeholder=\"Имя\"\r\n                    required {...register(\"Имя\")}\r\n                />\r\n            </label>\r\n            <label className=\"form__label required\">\r\n                <input\r\n                    className=\"form__input\"\r\n                    type=\"text\"\r\n                    placeholder=\"Отчество\"\r\n                    name=\"middleName\"\r\n                    required {...register(\"Отчество\")}\r\n                />\r\n            </label>\r\n\r\n            {/* Компания */}\r\n            <label className=\"form__label required form__label_max \">\r\n                <input\r\n                    className=\"form__input form__datalist\"\r\n                    list=\"company\"\r\n                    placeholder=\"Компания\"\r\n                    required {...register(\"Компания\")}\r\n                />\r\n                <datalist id=\"company\">\r\n                    {company.map((name, index) => (<option value={name} key={index}></option>))}\r\n                </datalist>\r\n                <button className=\"form__btn-add-company\" type=\"button\" onClick={() => alert(\"Форма добавления будет доступна позже\")}>+ добавить компанию</button>\r\n            </label>\r\n            <label className=\"form__label required form__label_max \">\r\n                <input\r\n                    className=\"form__input\"\r\n                    type=\"text\"\r\n                    placeholder=\"Должность\"\r\n                    required {...register(\"Должность\")}\r\n                />\r\n            </label>\r\n\r\n            {/* Роль */}\r\n            <div className=\"role\">\r\n                <p className=\"role__text\">Участвую в докладе как:</p>\r\n                <div className=\"form__participation\">\r\n                    <div className=\"form_radio_btn\">\r\n                        <input\r\n                            className=\"form_radio_btn\"\r\n                            id=\"speaker\"\r\n                            type=\"radio\"\r\n                            name=\"role-options\"\r\n                            value=\"Докладчик/соавтор\"\r\n                            {...register(\"Роль\")}\r\n                        />\r\n                        <label htmlFor=\"speaker\" onClick={() => setListener(true)}>Докладчик/соавтор</label>\r\n                    </div>\r\n                    <div className=\"form_radio_btn\">\r\n                        <input\r\n                            className=\"form_radio_btn\"\r\n                            id=\"listener\"\r\n                            type=\"radio\"\r\n                            name=\"role-options\"\r\n                            value=\"Слушатель\"\r\n                            defaultChecked\r\n                            {...register(\"Роль\")}\r\n                        />\r\n                        <label htmlFor=\"listener\" onClick={() => setListener(false)}>Слушатель</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Доклад */}\r\n            {listener ?\r\n                <>\r\n                    <label className=\"form__label required form__label_max \">\r\n                        <input\r\n                            className=\"form__input form__datalist\"\r\n                            list=\"lecture\"\r\n                            placeholder=\"Направление доклада\"\r\n                            required {...register(\"Направление доклада\")}\r\n                        />\r\n                        <datalist id=\"lecture\">\r\n                            {lectures.map((lecture, index) => (<option value={lecture} key={index}></option>))}\r\n                        </datalist>\r\n                    </label>\r\n\r\n                    <div className=\"role__choice form__label_max\">\r\n                        <div className=\"form_radio_btn\">\r\n                            <input\r\n                                className=\"form_radio_btn\"\r\n                                id=\"author\"\r\n                                type=\"radio\"\r\n                                name=\"author\"\r\n                                value=\"Докладчик\"\r\n                                defaultChecked\r\n                                {...register (\"Авторство\")}\r\n                            />\r\n                            <label htmlFor=\"author\">Докладчик</label>\r\n                        </div>\r\n                        <div className=\"form_radio_btn\">\r\n                            <input\r\n                                className=\"form_radio_btn\"\r\n                                id=\"co-author\"\r\n                                type=\"radio\"\r\n                                name=\"author\"\r\n                                value=\"Соавтор\"\r\n                                {...register(\"Авторство\")}\r\n                            />\r\n                            <label htmlFor=\"co-author\">Соавтор</label>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <label className=\"form__label required form__label_max \">\r\n                        <input\r\n                            className=\"form__input\"\r\n                            type=\"text\"\r\n                            placeholder=\"Тема доклада\"\r\n                            {...register(\"Тема доклада\")}\r\n                        />\r\n                    </label>\r\n\r\n                    <label className=\"form__label form__label_max \">\r\n                        <textarea\r\n                            className=\"form__input form__input_summary \"\r\n                            placeholder=\"Краткое содержание доклада\"\r\n                            {...register(\"Краткое содержание доклада\")}\r\n                        />\r\n                    </label>\r\n                </> : null\r\n            }\r\n\r\n            {/* Участие */}\r\n            <div className=\"role\">\r\n                <p className=\"role__text\">Форма участия:</p>\r\n                <div className=\"form__participation\">\r\n                    <div className=\"form_radio_btn\">\r\n                        <input\r\n                            className=\"form_radio_btn\"\r\n                            id=\"intramural\"\r\n                            type=\"radio\"\r\n                            name=\"participation\"\r\n                            defaultChecked\r\n                            value=\"Очная\"\r\n                            {...register(\"Форма участия\")}\r\n\r\n                        />\r\n                        <label htmlFor=\"intramural\">Очная</label>\r\n                    </div>\r\n                    <div className=\"form_radio_btn\">\r\n                        <input\r\n                            className=\"form_radio_btn\"\r\n                            id=\"extramural\"\r\n                            type=\"radio\"\r\n                            name=\"participation\"\r\n                            value=\"Заочная\"\r\n                            {...register(\"Форма участия\")}\r\n                        />\r\n                        <label htmlFor=\"extramural\">Заочная (ВКС)</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Информация для связи */}\r\n            <p className=\"form__info\">Информация для связи:</p>\r\n            <label className=\"form__label required\">\r\n                <input\r\n                    className=\"form__input\"\r\n                    type=\"email\"\r\n                    placeholder=\"Адрес электронной почты\"\r\n                    required {...register(\"email\")}\r\n                />\r\n            </label>\r\n            <label className=\"form__label required\">\r\n                <input\r\n                    className=\"form__input\"\r\n                    type=\"tel\" placeholder=\"Рабочий телефон\"\r\n                    required {...register(\"office-phone\")}\r\n                />\r\n            </label>\r\n            <label className=\"form__label required\">\r\n                <input\r\n                    className=\"form__input\"\r\n                    type=\"tel\"\r\n                    placeholder=\"Сотовый телефон\"\r\n                    required {...register(\"mobile-phone\")}\r\n                />\r\n            </label>\r\n\r\n            <div className=\"bottom-info\">\r\n                <p>Остались вопросы? Напиши нам: <a\r\n                    href=\"mailto:seminar@igirgi.su?subject=Вопросы по семинару\">seminar@igirgi.su</a></p>\r\n                <div className=\"required\">\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        name=\"personal-data\"\r\n                        required\r\n                        onClick={()=> setPersonalData(!personaldata)}\r\n                    />\r\n                    я согласен на <span onClick={props.openModal}>обработку персональных данных</span>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form__submit\">\r\n                <input className=\"form__submit_btn\" type=\"submit\" value=\"Отправить заявку\" disabled={!personaldata}/>\r\n            </div>\r\n        </form>\r\n\r\n    );\r\n}","import './Modal.css';\r\n\r\nfunction Modal(props) {\r\n\r\n    return (\r\n        <div className={`modal ${props.openModal ? \"modal__open\" : \"\"}`} onClick={props.onOverlayAndEscClick}>\r\n            <div className=\"modal__content\">\r\n                <button className=\"modal__close\" onClick={props.closeModal}/>\r\n                <p className=\"modal__info\">Нажимая кнопку «отправить заявку», я даю свое согласие на обработку моих\r\n                    персональных данных, в соответствии с <a className=\"modal__link\" href=\"http://www.kremlin.ru/acts/bank/24154\" target=\"_blank\">Федеральным законом от 27.07.2006 года №152-ФЗ«О персональных\r\n                    данных»</a>, на условиях и для целей, определенных в Согласии на обработку персональных данных</p>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Modal;\r\n","import './App.css';\nimport Header from \"../Header/Header\";\nimport Form from \"../Form/Form\";\nimport Modal from \"../Modal/Modal\";\nimport {useState, useEffect, useCallback} from \"react\";\n\nfunction App() {\n\n    const [modalActive, setModalActive] = useState(false);\n\n    const openModal = () => {\n        setModalActive(true);\n    };\n\n    const closeModal = () => {\n        setModalActive(false);\n    };\n\n    useEffect(() => {\n        window.addEventListener('keyup', (e) => {\n            if (e.key === 'Escape') {\n                closeModal()\n            }\n        });\n    }, [closeModal]);\n\n    const handleOverlayClose = useCallback((e) => {\n        if (e.target.classList.contains('modal')) {\n            closeModal();\n        }\n    }, [closeModal]);\n\n    return (\n        <div className=\"app\">\n            <Header/>\n            <Form openModal={openModal}/>\n            <Modal onOverlayAndEscClick={handleOverlayClose}\n                   closeModal={closeModal}\n                   openModal={modalActive}/>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}